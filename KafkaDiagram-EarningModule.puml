@startuml Earning_Module_Kafka_Flow

' 自定義圖形樣式
skinparam rectangle {
  BackgroundColor<<Service>> MediumPurple
  BorderColor<<Service>> DarkPurple
  FontColor<<Service>> White
}

skinparam database {
  BackgroundColor<<KafkaTopic>> LightYellow
  BorderColor<<KafkaTopic>> Orange
  FontColor<<KafkaTopic>> Black
}

skinparam rectangle {
  BackgroundColor<<DBTable>> PaleGreen
  BorderColor<<DBTable>> DarkGreen
  FontColor<<DBTable>> Black
}

skinparam rectangle {
  BackgroundColor<<WebApp>> LightBlue
  BorderColor<<DarkBlue>> DarkPurple
  FontColor<<WebApp>> Black
}

' 資料庫表格
rectangle "tTableRating" as tTableRating <<DBTable>>
rectangle "tSlotRating" as tSlotRating <<DBTable>>

' Sink Connector
rectangle "CDC Sink Connector" as SinkConnector <<Service>>

' 服務定義
rectangle "Gapi_award\n(C# Service)" as Gapi_award <<Service>>
rectangle "GSI-Crm\n(C# Service)" as GSI_Crm <<Service>>
rectangle "EarningModule_remapTableRating\n(C# Service)" as EMTableRating <<Service>>
rectangle "EarningModule_remapOtherRating\n(C# Service)" as EMOtherRating <<Service>>
rectangle "EarningModule_remapSlotRating\n(C# Service)" as EMSlotRating <<Service>>
rectangle "EarningModule_remapSmartTableRating\n(C# Service)" as EMSmartTableRating <<Service>>
rectangle "Earning_BucketRuleEnginee\n(C# Service)" as EarningRuleEngine <<Service>>
rectangle "Earning_BucketRatingRepository\n(C# Service)" as EarningRepository <<Service>>
rectangle "GEGCRM_CardTier\n(C# Service)" as GEGCRM_CardTier <<Service>>
rectangle "CRM-Backend\n(Angular App)" as CRMBackend <<WebApp>>

' Kafka Topics 定義
database "QAD4-tTableRating\n(12 Partitions)" as QAD4TableRating <<KafkaTopic>>
database "QAD4-tSlotRating\n(12 Partitions)" as QAD4SlotRating <<KafkaTopic>>
database "tOtherRating\n(12 Partitions)" as tOtherRating <<KafkaTopic>>
database "BetByBetBuffer\n(12 Partitions)" as BetByBetBuffer <<KafkaTopic>>
database "EarningModule:NormalizedRating\n(12 Partitions)" as EMNormalizedRating <<KafkaTopic>>
database "EarningModule:EarningRuleSync\n(12 Partitions)" as EMEarningRuleSync <<KafkaTopic>>
database "EarningModule:QualifyRating\n(12 Partitions)" as EMQualifyRating <<KafkaTopic>>
database "EarningModule:QualifyRating_Deadletter\n(12 Partitions)" as EMQualifyRatingDeadletter <<KafkaTopic>>
database "GEGCRM_CardTierChange\n(12 Partitions)" as GEGCRMCardTierChange <<KafkaTopic>>

' 關係定義 - 資料來源與 CDC 連接器
tTableRating --> SinkConnector : monitored by
tSlotRating --> SinkConnector : monitored by

' CDC 連接器產生 Kafka 消息
SinkConnector --> QAD4TableRating : produces\n(key: Acct)
SinkConnector --> QAD4SlotRating : produces\n(key: Acct)

' 其他服務產生 Kafka 消息
Gapi_award --> tOtherRating : produces\n(key: Acct)
GSI_Crm --> BetByBetBuffer : produces\n(key: Acct)

' 消費 Kafka 消息
QAD4TableRating --> EMTableRating : consumes
tOtherRating --> EMOtherRating : consumes
QAD4SlotRating --> EMSlotRating : consumes
BetByBetBuffer --> EMSmartTableRating : consumes

' 產生標準化評分
EMTableRating --> EMNormalizedRating : produces\n(key: Acct)
EMOtherRating --> EMNormalizedRating : produces\n(key: Acct)
EMSlotRating --> EMNormalizedRating : produces\n(key: Acct)
EMSmartTableRating --> EMNormalizedRating : produces\n(key: Acct)

' CRM Backend 生成規則同步消息
CRMBackend --> EMEarningRuleSync : produces\n(key: Acct)

' Earning Rule Engine 處理
EMNormalizedRating --> EarningRuleEngine : consumes
EMEarningRuleSync --> EarningRuleEngine : consumes

' Earning Rule Engine 產生輸出
EarningRuleEngine --> EMQualifyRating : produces\n(key: Acct)
EarningRepository --> EMQualifyRatingDeadletter : produces\n(key: Acct)

' 評分資料庫和卡等級處理
EMQualifyRating --> EarningRepository : consumes
EMQualifyRating --> GEGCRM_CardTier : consumes

' 卡等級變更通知
GEGCRM_CardTier --> GEGCRMCardTierChange : produces\n(key: Acct)

' 詳細信息註釋
note bottom of QAD4TableRating
  ** All Kafka Topics**:
  - 12 Partitions
  - Partition Key: "Acct"
endnote

@enduml












-- 
1. 所有kafka topic都有12個partition
2. 所有partition key為: "Acct"
2. sink connector monitor "tTableRating", "tSlotRating"這2張table, 然後produce CDC kafka topic message出來, kafka topic分別為"QAD4-tTableRating", "QAD4-tSlotRating"
3. Gapi_award 這個C# service produce message to kafka topic "tOtherRating"
3. GSI-Crm這個C# service produce message to kafka topic "BetByBetBuffer"
4. EarningModule_remapTableRating 這個C# service consume "QAD4-tTableRating"
5. EarningModule_remapOtherRating 這個C# service consume "tOtherRating"
6. EarningModule_remapSlotRating 這個C# service consume "QAD4-tSlotRating"
7. EarningModule_remapSmartTableRating 這個C# service consume "BetByBetBuffer"
8. EarningModule_remapTableRating,EarningModule_remapOtherRating,EarningModule_remapSlotRating, EarningModule_remapSmartTableRating 這4個C# service produce message to kafka topic "EarningModule:NormalizedRating"
9. "CRM-Backend" 這個 augular service produce message to kafka topic "EarningModule:EarningRuleSync"
10. Earning_BucketRuleEnginee 這個C# service consume "EarningModule:NormalizedRating", "EarningModule:EarningRuleSync"
11. Earning_BucketRuleEnginee 這個C# service produce message to kafka topic "EarningModule:QualifyRating"
12 Earning_BucketRatingRepository 這個C# consumer "EarningModule:QualifyRating"
13 Earning_BucketRatingRepository 這個C# service produce message to kafka topic "EarningModule:QualifyRating_Deadletter"
14. GEGCRM_CardTier 這個C# service consume "EarningModule:QualifyRating"
15 GEGCRM_CardTier 這個C# service produce message to kafka topic "GEGCRM_CardTierChange"
